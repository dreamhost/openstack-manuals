..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _nova-vnc:

.. list-table:: Description of VNC configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[DEFAULT]**
     -
   * - ``daemon`` = ``False``
     - (Boolean) Become a daemon (background process)
   * - ``key`` = ``None``
     - (String) SSL key file (if separate from cert)
   * - ``record`` = ``False``
     - (Boolean) Record sessions to FILE.[session_number]
   * - ``source_is_ipv6`` = ``False``
     - (Boolean) Source is ipv6
   * - ``ssl_only`` = ``False``
     - (Boolean) Disallow non-encrypted connections
   * - ``web`` = ``/usr/share/spice-html5``
     - (String) Run webserver on same port. Serve files from DIR.
   * - **[vmware]**
     -
   * - ``vnc_port`` = ``5900``
     - (Port number) VNC starting port
   * - ``vnc_port_total`` = ``10000``
     - (Integer) Total number of VNC ports
   * - **[vnc]**
     -
   * - ``enabled`` = ``True``
     - (Boolean) Enable VNC related features. Guests will get created with graphical devices to support this. Clients (for example Horizon) can then establish a VNC connection to the guest. Possible values: * True: Enables the feature * False: Disables the feature Services which consume this: * ``nova-compute`` Related options: * None
   * - ``keymap`` = ``en-us``
     - (String) Keymap for VNC. The keyboard mapping (keymap) determines which keyboard layout a VNC session should use by default. Possible values: * A keyboard layout which is supported by the underlying hypervisor on this node. This is usually an 'IETF language tag' (for example 'en-us'). If you use QEMU as hypervisor, you should find the list of supported keyboard layouts at ``/usr/share/qemu/keymaps``. Services which consume this: * ``nova-compute`` Related options: * None
   * - ``novncproxy_base_url`` = ``http://127.0.0.1:6080/vnc_auto.html``
     - (String) Public address of noVNC VNC console proxy. The VNC proxy is an OpenStack component that enables compute service users to access their instances through VNC clients. noVNC provides VNC support through a websocket-based client. This option sets the public base URL to which client systems will connect. noVNC clients can use this address to connect to the noVNC instance and, by extension, the VNC sessions. Possible values: * A URL Services which consume this: * ``nova-compute`` Related options: * novncproxy_host * novncproxy_port
   * - ``novncproxy_host`` = ``0.0.0.0``
     - (String) IP address that the noVNC console proxy should bind to. The VNC proxy is an OpenStack component that enables compute service users to access their instances through VNC clients. noVNC provides VNC support through a websocket-based client. This option sets the private address to which the noVNC console proxy service should bind to. Possible values: * An IP address Services which consume this: * ``nova-compute`` Related options: * novncproxy_port * novncproxy_base_url
   * - ``novncproxy_port`` = ``6080``
     - (Integer) Port that the noVNC console proxy should bind to. The VNC proxy is an OpenStack component that enables compute service users to access their instances through VNC clients. noVNC provides VNC support through a websocket-based client. This option sets the private port to which the noVNC console proxy service should bind to. Possible values: * A port number Services which consume this: * ``nova-compute`` Related options: * novncproxy_host * novncproxy_base_url
   * - ``vncserver_listen`` = ``127.0.0.1``
     - (String) The IP address on which an instance should listen to for incoming VNC connection requests on this node. Possible values: * An IP address Services which consume this: * ``nova-compute`` Related options: * None
   * - ``vncserver_proxyclient_address`` = ``127.0.0.1``
     - (String) Private, internal address of VNC console proxy. The VNC proxy is an OpenStack component that enables compute service users to access their instances through VNC clients. This option sets the private address to which proxy clients, such as ``nova-xvpvncproxy``, should connect to. Possible values: * An IP address Services which consume this: * ``nova-compute`` Related options: * None
   * - ``xvpvncproxy_base_url`` = ``http://127.0.0.1:6081/console``
     - (String) Public address of XVP VNC console proxy. The VNC proxy is an OpenStack component that enables compute service users to access their instances through VNC clients. Xen provides the Xenserver VNC Proxy, or XVP, as an alternative to the websocket-based noVNC proxy used by Libvirt. In contrast to noVNC, XVP clients are Java-based. This option sets the public base URL to which client systems will connect. XVP clients can use this address to connect to the XVP instance and, by extension, the VNC sessions. Possible values: * A URL Services which consume this: * ``nova-compute`` Related options: * xvpvncproxy_host * xvpvncproxy_port
   * - ``xvpvncproxy_host`` = ``0.0.0.0``
     - (String) IP address that the XVP VNC console proxy should bind to. The VNC proxy is an OpenStack component that enables compute service users to access their instances through VNC clients. Xen provides the Xenserver VNC Proxy, or XVP, as an alternative to the websocket-based noVNC proxy used by Libvirt. In contrast to noVNC, XVP clients are Java-based. This option sets the private address to which the XVP VNC console proxy service should bind to. Possible values: * An IP address Services which consume this: * ``nova-compute`` Related options: * xvpvncproxy_port * xvpvncproxy_base_url
   * - ``xvpvncproxy_port`` = ``6081``
     - (Integer) Port that the XVP VNC console proxy should bind to. The VNC proxy is an OpenStack component that enables compute service users to access their instances through VNC clients. Xen provides the Xenserver VNC Proxy, or XVP, as an alternative to the websocket-based noVNC proxy used by Libvirt. In contrast to noVNC, XVP clients are Java-based. This option sets the private port to which the XVP VNC console proxy service should bind to. Possible values: * A port number Services which consume this: * ``nova-compute`` Related options: * xvpvncproxy_host * xvpvncproxy_base_url
