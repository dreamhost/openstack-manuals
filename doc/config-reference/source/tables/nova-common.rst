..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _nova-common:

.. list-table:: Description of common configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[DEFAULT]**
     -
   * - ``bindir`` = ``/usr/local/bin``
     - (String) Directory where nova binaries are installed
   * - ``compute_topic`` = ``compute``
     - (String) The topic compute nodes listen on
   * - ``console_topic`` = ``console``
     - (String) The topic console proxy nodes listen on
   * - ``consoleauth_topic`` = ``consoleauth``
     - (String) The topic console auth proxy nodes listen on
   * - ``executor_thread_pool_size`` = ``64``
     - (Integer) Size of executor thread pool.
   * - ``fatal_exception_format_errors`` = ``False``
     - (Boolean) Make exception message format errors fatal
   * - ``host`` = ``localhost``
     - (String) Name of this node. This can be an opaque identifier. It is not necessarily a hostname, FQDN, or IP address. However, the node name must be valid within an AMQP key, and if using ZeroMQ, a valid hostname, FQDN, or IP address
   * - ``memcached_servers`` = ``None``
     - (Unknown) DEPRECATED: Memcached servers or None for in process cache. "memcached_servers" opt is deprecated in Mitaka. In Newton release oslo.cache config options should be used as this option will be removed. Please add a [cache] group in your nova.conf file and add "enable" and "memcache_servers" option in this section.
   * - ``my_ip`` = ``10.0.0.1``
     - (String) IP address of this host
   * - ``notify_api_faults`` = ``False``
     - (Boolean) If set, send api.fault notifications on caught exceptions in the API service.
   * - ``notify_on_state_change`` = ``None``
     - (String) If set, send compute.instance.update notifications on instance state changes. Valid values are None for no notifications, "vm_state" for notifications on VM state changes, or "vm_and_task_state" for notifications on VM and task state changes.
   * - ``pybasedir`` = ``/usr/lib/python/site-packages/nova``
     - (String) Directory where the nova python module is installed
   * - ``report_interval`` = ``10``
     - (Integer) Seconds between nodes reporting state to datastore
   * - ``rootwrap_config`` = ``/etc/nova/rootwrap.conf``
     - (String) Path to the rootwrap configuration file to use for running commands as root
   * - ``service_down_time`` = ``60``
     - (Integer) Maximum time since last check-in for up service
   * - ``state_path`` = ``$pybasedir``
     - (String) Top-level directory for maintaining nova's state
   * - ``tempdir`` = ``None``
     - (String) Explicitly specify the temporary working directory
   * - ``use_rootwrap_daemon`` = ``False``
     - (Boolean) Start and use a daemon that can run the commands that need to be run with root privileges. This option is usually enabled on nodes that run nova compute processes
   * - **[workarounds]**
     -
   * - ``destroy_after_evacuate`` = ``True``
     - (Boolean) DEPRECATED: Whether to destroy instances on startup when we suspect they have previously been evacuated. This can result in data loss if undesired. See https://launchpad.net/bugs/1419785
   * - ``disable_libvirt_livesnapshot`` = ``True``
     - (Boolean) When using libvirt 1.2.2 live snapshots fail intermittently under load. This config option provides a mechanism to enable live snapshot while this is resolved. See https://bugs.launchpad.net/nova/+bug/1334398
   * - ``disable_rootwrap`` = ``False``
     - (Boolean) This option allows a fallback to sudo for performance reasons. For example see https://bugs.launchpad.net/nova/+bug/1415106
   * - ``handle_virt_lifecycle_events`` = ``True``
     - (Boolean) Whether or not to handle events raised from the compute driver's 'emit_event' method. These are lifecycle events raised from compute drivers that implement the method. An example of a lifecycle event is an instance starting or stopping. If the instance is going through task state changes due to an API operation, like resize, the events are ignored. However, this is an advanced feature which allows the hypervisor to signal to the compute service that an unexpected state change has occurred in an instance and the instance can be shutdown automatically - which can inherently race in reboot operations or when the compute service or host is rebooted, either planned or due to an unexpected outage. Care should be taken when using this and sync_power_state_interval is negative since then if any instances are out of sync between the hypervisor and the Nova database they will have to be synchronized manually. See https://bugs.launchpad.net/bugs/1444630
